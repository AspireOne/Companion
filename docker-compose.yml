version: "3"

services:
  redis:
    image: redis:latest
    container_name: cachze
    ports:
      - "6379:6379"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    command: --requirepass ${REDIS_PASSWORD}

  postgres:
    image: postgres
    container_name: database
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_DB}
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "${DATABASE_DB}"]
      interval: 10s
      timeout: 5s
      retries: 3

  soketi:
    image: quay.io/soketi/soketi:latest
    container_name: websocket
    environment:
      SOKETI_DEBUG: 1
      SOKETI_SSL_CERT: ""
      SOKETI_SSL_KEY: ""
      SOKETI_SSL_PASS: ""
      SOKETI_SSL_CA: ""
      SOKETI_APP_MANAGER_DRIVER: array
      SOKETI_DEFAULT_APP_ID: app-id
      SOKETI_DEFAULT_APP_KEY: app-key
      SOKETI_DEFAULT_APP_SECRET: app-secret
    ports:
      - "6001:6001"
    depends_on:
      - postgres

networks:
  default:
    name: milvus
