version: "3"

services:
  postgres:
    image: postgres
    container_name: database
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_DB}
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "${DATABASE_DB}"]
      interval: 10s
      timeout: 5s
      retries: 3

  soketi:
    image: quay.io/soketi/soketi:latest
    container_name: websocket
    environment:
      SOKETI_DEBUG: 1
      SOKETI_SSL_CERT: ''
      SOKETI_SSL_KEY: ''
      SOKETI_SSL_PASS: ''
      SOKETI_SSL_CA: ''
      SOKETI_APP_MANAGER_DRIVER: array
      SOKETI_DEFAULT_APP_ID: app-id
      SOKETI_DEFAULT_APP_KEY: app-key
      SOKETI_DEFAULT_APP_SECRET: app-secret
    ports:
      - 6001:6001
    depends_on:
      - postgres

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"    
      - "9001:9001"  
    volumes:
      - minio-data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_DEFAULT_BUCKET: ${MINIO_DEFAULT_BUCKET_NAME}
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  minio-data:




